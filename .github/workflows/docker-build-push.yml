# 工作流的名称
name: Build and Push Docker Image to Docker Hub

# 触发工作流的事件
on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ "main" ]
  # 允许您在 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

# 定义工作流中的任务
jobs:
  build-and-push:
    # 任务运行的虚拟环境
    runs-on: ubuntu-latest

    # 任务的步骤
    steps:
      # 步骤 1: 检出代码
      # 拉取你的 GitHub 仓库代码到 Actions 的虚拟机上
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 QEMU (用于多平台构建，是一个好习惯)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 步骤 3: 设置 Docker Buildx
      # Buildx 是 Docker 的一个高级构建工具，功能更强大
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤 4: 登录到 Docker Hub
      # 使用我们之前在 GitHub Secrets 中设置的用户名和 Token
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤 5: 构建并推送 Docker 镜像
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          # 构建上下文的路径 ( . 表示项目根目录)
          context: .
          # Dockerfile 的路径
          file: ./Dockerfile
          # 将构建好的镜像推送到仓库
          push: true
          # 为镜像打标签
          # !!! 请将下面的 "your-dockerhub-username/your-repo-name" 修改为您自己的 !!!
          tags: |
            your-dockerhub-username/your-repo-name:latest
            your-dockerhub-username/your-repo-name:${{ github.sha }}
